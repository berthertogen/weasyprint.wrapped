name: build-test-code-scan

on:
  push:
    branches-ignore: [main]
  pull_request:
    branches: [ main ]

jobs:
  analyze:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
    - name: Build
      run: dotnet build --verbosity normal /p:UseSharedCompilation=false
      working-directory: ./src/Weasyprint.Wrapped
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
  lint:
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-assets-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build asset
        shell: pwsh
        run: ./build-on-windows.ps1
      - name: Upload asset
        uses: actions/upload-artifact@v3
        with:
          name: assets
          path: ./assets/standalone-windows-64.zip
  build-assets-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build asset
        shell: bash
        run: ./build-on-linux.sh
      - name: Upload asset
        uses: actions/upload-artifact@v3
        with:
          name: assets
          path: ./assets/standalone-linux-64.zip
  test-assets:
    needs: [build-assets-windows, build-assets-linux]
    strategy:
        matrix:
          os: [ubuntu-latest, windows-latest]
          include:
          - osname: windows
            os: windows-latest
          - osname: linux
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK 6.0.x
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - uses: actions/download-artifact@v3
        with:
          name: assets
          path: assets
      - name: Test
        run: dotnet test --verbosity normal
        working-directory: ./src/Weasyprint.Wrapped.Tests

